<?xml version="1.0"?>
<component name="com.nuxeo.fontoxml.FontoXMLService" version="1.0">

  <implementation class="com.nuxeo.fontoxml.FontoXMLServiceImpl" />

  <service>
    <provide interface="com.nuxeo.fontoxml.FontoXMLService" />
  </service>

  <extension-point name="configuration">
    <documentation>
      Important: See Javadoc for com.nuxeo.fontoxml.FontoXMLService for explanation and details about the call back
      operation chains.
      <code>
        <configuration>
          <!-- no typeFormNewXMLDocument means the service will call the FileManager -->
          <typeForNewXMLDocument></typeForNewXMLDocument>
          <documentCreationCallbackChain>javascript.fontoxml_createDocument</documentCreationCallbackChain>
          <renditionCallbackChain>javascript.fontoxml_getAssetRendition</renditionCallbackChain>
          <defaultRendition>MyCustomFontoRendition</defaultRendition>
          <renditionXPath>customschema:blobField</renditionXPath>
        </configuration>
      </code>
    </documentation>
    <object class="com.nuxeo.fontoxml.FontoXMLConfigDescriptor" />
  </extension-point>

  <!-- See the doc. There are priorities. first we run the chain (input: document, output: blob), if it returns null, we 
    get a default rendition, if it returns null, we use the XPath. Last resort, we return file:content. -->
  <extension target="com.nuxeo.fontoxml.FontoXMLService" point="configuration">
    <configuration>
      <typeForNewXMLDocument>File</typeForNewXMLDocument>
      <documentCreationCallbackChain></documentCreationCallbackChain>
      <renditionCallbackChain></renditionCallbackChain>
      <defaultRendition>OriginalJpeg</defaultRendition>
      <renditionXPath></renditionXPath>
    </configuration>
  </extension>

</component>
